"""First commit

Revision ID: 2cae90bf653d
Revises:
Create Date: 2024-07-11 14:18:17.760522

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2cae90bf653d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('vacancy_business_type')
    op.drop_table('business_types')
    op.drop_table('answers')
    op.drop_table('questions')
    op.drop_table('competencies')
    op.drop_table('users')
    op.drop_table('vacancies')
    # ### end Alembic commands ###


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('vacancies',
                    sa.Column('id', sa.UUID(),
                              autoincrement=False, nullable=False),
                    sa.Column('title', sa.VARCHAR(length=255),
                              autoincrement=False, nullable=False),
                    sa.Column('competencies', sa.TEXT(),
                              autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint('id', name='vacancies_pkey'),
                    sa.UniqueConstraint('title', name='vacancies_title_key'),
                    postgresql_ignore_search_path=False)
    op.create_table('answers',
                    sa.Column('id', sa.UUID(), autoincrement=False,
                              nullable=False),
                    sa.Column('personal_data', sa.TEXT(), autoincrement=False,
                              nullable=False),
                    sa.Column('content', sa.TEXT(), autoincrement=False,
                              nullable=False),
                    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'),
                              autoincrement=False, nullable=False),
                    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'),
                              autoincrement=False, nullable=False),
                    )
    op.create_table('competencies',
                    sa.Column('id', sa.UUID(),
                              autoincrement=False, nullable=False),
                    sa.Column('title', sa.VARCHAR(length=255),
                              autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='competencies_pkey'),
                    sa.UniqueConstraint('title', name='competencies_title_key'))
    op.create_table('questions',
                    sa.Column('id', sa.UUID(),
                              autoincrement=False, nullable=False),
                    sa.Column('competency_id', sa.UUID(),
                              autoincrement=False, nullable=True),
                    sa.Column('content', sa.TEXT(),
                              autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['competency_id'],
                                            ['competencies.id'],
                                            name='questions_competency_'
                                                 'id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='questions_pkey'))
    op.create_table('users',
                    sa.Column('id', sa.UUID(),
                              autoincrement=False, nullable=False),
                    )
    op.create_table('business_types',
                    sa.Column('id', sa.UUID(),
                              autoincrement=False, nullable=False),
                    sa.Column('title', sa.VARCHAR(length=255),
                              autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='business_types_pkey'),
                    sa.UniqueConstraint('title',
                                        name='business_types_title_key'))
    op.create_table('vacancy_business_type',
                    sa.Column('vacancy_id', sa.UUID(),
                              autoincrement=False, nullable=True),
                    sa.Column('business_type_id', sa.UUID(),
                              autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['business_type_id'],
                                            ['business_types.id'],
                                            name='vacancy_business_type_'
                                                 'business_type_id_fkey'),
                    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancies.id'],
                                            name='vacancy_business_type_'
                                                 'vacancy_id_fkey'))
    # ### end Alembic commands ###
